theme = "catppuccin_macchiato_transparent"

[editor]
line-number = "relative"
auto-format = true
bufferline = "always"
end-of-line-diagnostics = "hint"
smart-tab.enable = false
undercurl = true
clipboard-provider = "pasteboard"
true-color = true
color-modes = true

[editor.lsp]
display-messages = true

[editor.indent-guides]
render = true

[editor.file-picker]
hidden = false

[keys.normal-and-select]
C-s = ":w"
A-r = ":rla"
C-x = ":buffer-close"
A-h = "goto_previous_buffer"
A-l = "goto_next_buffer"
A-S-h = ":buffer-move-left"
A-S-l = ":buffer-move-right"
X = "extend_line_above"
A-x = "extend_to_line_bounds"
A-X = "shrink_to_line_bounds"
p = "paste_clipboard_after"
P = "paste_clipboard_before"
y = "yank_to_clipboard"
R = "replace_selections_with_clipboard"
C-h = "jump_view_left"
C-j = "jump_view_down"
C-k = "jump_view_up"
C-l = "jump_view_right"
F7 = "goto_next_change"
A-F7 = "goto_prev_change"
F8 = "goto_next_diag"
A-F8 = "goto_prev_diag"
A-j = "page_down"
A-k = "page_up"
A-up = [ # shift selections up one line
  "ensure_selections_forward",
  "extend_to_line_bounds",
  "extend_char_right",
  "extend_char_left",
  "delete_selection",
  "move_line_up",
  "add_newline_above",
  "move_line_up",
  "replace_with_yanked",
]
A-down = [ # shift selections down one line
  "ensure_selections_forward",
  "extend_to_line_bounds",
  "extend_char_right",
  "extend_char_left",
  "delete_selection",
  "add_newline_below",
  "move_line_down",
  "replace_with_yanked",
]

[keys.normal-and-select.ret]
x = ":buffer-close!"
g = ":reset-diff-change"
a = ":sh tmux popup -d \"#{pane_current_path}\" -xC -yC -w90%% -h90%% -E env EDITOR=hx lazygit"
f = ":sh tmux popup -xC -yC -w90%% -h90%% -E yazi $(realpath '%{buffer_name}' 2>/dev/null || echo '')"
w = ":sh git blame $(realpath '%{buffer_name}' 2>/dev/null || echo '') -L %{cursor_line},%{cursor_line}"
s = ":sh tmux popup -xC -yC -w90%% -h90%% -E env GIT_PAGER='less -+F' git log --follow -p -- $(realpath '%{buffer_name}' 2>/dev/null || echo '')"
d = ":sh tmux popup -xC -yC -w90%% -h90%% -E scooter"
e = [":write-all", ":insert-output scooter >/dev/tty", ":redraw", ":reload-all"]
j = "save_selection"
y = ":sh echo \"%{buffer_name}\" | tr -d '\n' | pbcopy"
Y = ":sh echo $(realpath '%{buffer_name}' 2>/dev/null || echo '') | tr -d '\n' | pbcopy"
t = ":toggle inline-diagnostics.cursor-line warning disable"
u = ":sh echo \"$(git rev-parse --short HEAD)/%{buffer_name}#L%{cursor_line}\" | pbcopy"

[keys.normal-and-select.space]
p = "paste_after"
P = "paste_before"
y = "yank"
R = "replace_with_yanked"
x = ["yank_to_clipboard", "delete_selection"]
";" = "global_search_fixed_strings"

[keys.normal-and-select.backspace]
k = "hover"
